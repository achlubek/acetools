// This file was autogenerated by aero-di. It is recommended to not change it

/* eslint-disable no-restricted-imports */
import { DosToUnixCommand as DosToUnixCommand_0 } from "./cli/commands/DosToUnixCommand";
import { LinesAndCommand as LinesAndCommand_1 } from "./cli/commands/LinesAndCommand";
import { LinesForeachCommand as LinesForeachCommand_2 } from "./cli/commands/LinesForeachCommand";
import { PasteCommand as PasteCommand_3 } from "./cli/commands/PasteCommand";
import { RegexReplaceCommand as RegexReplaceCommand_4 } from "./cli/commands/RegexReplaceCommand";
import { TrimCommand as TrimCommand_5 } from "./cli/commands/TrimCommand";
import { InternalError as InternalError_6 } from "./util/exceptions/InternalError";
import { UserError as UserError_7 } from "./util/exceptions/UserError";

export interface ParameterData {
  name: string;
  type: string;
}

export interface PropertyData {
  name: string;
  type: string;
  visibility: "public" | "protected" | "private";
}

export interface MethodData {
  name: string;
  parameters: ParameterData[];
  returnType: string;
  visibility: "public" | "protected" | "private";
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type Constructor = new (...args: any[]) => any;
export interface ClassData {
  fqcn: string;
  name: string;
  ctor: Constructor | null;
  implementsInterfaces: string[];
  extendsClass: string | null;
  constructorParameters: ParameterData[];
  constructorVisibility: "public" | "protected" | "private";
  isAbstract: boolean;
  properties: PropertyData[];
  methods: MethodData[];
}

export interface InterfaceData {
  fqin: string;
  name: string;
  properties: PropertyData[];
  extendsInterface: string | null;
  methods: MethodData[];
}

export const classesReflection: ClassData[] = [
  {
    fqcn: "cli/commands/DosToUnixCommand/DosToUnixCommand",
    name: "DosToUnixCommand",
    ctor: DosToUnixCommand_0,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "cli/commands/LinesAndCommand/LinesAndCommand",
    name: "LinesAndCommand",
    ctor: LinesAndCommand_1,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [
          { name: "file1", type: "unknown" },
          { name: "file2", type: "unknown" },
        ],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "cli/commands/LinesForeachCommand/LinesForeachCommand",
    name: "LinesForeachCommand",
    ctor: LinesForeachCommand_2,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [{ name: "execparts", type: "unknown" }],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "cli/commands/PasteCommand/PasteCommand",
    name: "PasteCommand",
    ctor: PasteCommand_3,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [
          { name: "alias", type: "unknown" },
          { name: "formula", type: "unknown" },
        ],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "cli/commands/RegexReplaceCommand/RegexReplaceCommand",
    name: "RegexReplaceCommand",
    ctor: RegexReplaceCommand_4,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [
          { name: "regex", type: "unknown" },
          { name: "repl", type: "unknown" },
          { name: "flags", type: "unknown" },
        ],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "cli/commands/TrimCommand/TrimCommand",
    name: "TrimCommand",
    ctor: TrimCommand_5,
    implementsInterfaces: ["CommandInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
      {
        name: "execute",
        returnType: "void",
        parameters: [],
        visibility: "private",
      },
    ],
  },
  {
    fqcn: "util/exceptions/InternalError/InternalError",
    name: "InternalError",
    ctor: InternalError_6,
    implementsInterfaces: [],
    extendsClass: "Error",
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [],
  },
  {
    fqcn: "util/exceptions/UserError/UserError",
    name: "UserError",
    ctor: UserError_7,
    implementsInterfaces: [],
    extendsClass: "Error",
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [],
  },
];

export const interfacesReflection: InterfaceData[] = [
  {
    fqin: "reflectionData/ParameterData",
    name: "ParameterData",
    extendsInterface: null,
    properties: [
      { name: "name", type: "string", visibility: "public" },
      { name: "type", type: "string", visibility: "public" },
    ],
    methods: [],
  },
  {
    fqin: "reflectionData/PropertyData",
    name: "PropertyData",
    extendsInterface: null,
    properties: [
      { name: "name", type: "string", visibility: "public" },
      { name: "type", type: "string", visibility: "public" },
      {
        name: "visibility",
        type: '"public"|"protected"|"private"',
        visibility: "public",
      },
    ],
    methods: [],
  },
  {
    fqin: "reflectionData/MethodData",
    name: "MethodData",
    extendsInterface: null,
    properties: [
      { name: "name", type: "string", visibility: "public" },
      { name: "parameters", type: "ParameterData[]", visibility: "public" },
      { name: "returnType", type: "string", visibility: "public" },
      {
        name: "visibility",
        type: '"public"|"protected"|"private"',
        visibility: "public",
      },
    ],
    methods: [],
  },
  {
    fqin: "reflectionData/ClassData",
    name: "ClassData",
    extendsInterface: null,
    properties: [
      { name: "fqcn", type: "string", visibility: "public" },
      { name: "name", type: "string", visibility: "public" },
      { name: "ctor", type: "Constructor|null", visibility: "public" },
      { name: "implementsInterfaces", type: "string[]", visibility: "public" },
      { name: "extendsClass", type: "string|null", visibility: "public" },
      {
        name: "constructorParameters",
        type: "ParameterData[]",
        visibility: "public",
      },
      {
        name: "constructorVisibility",
        type: '"public"|"protected"|"private"',
        visibility: "public",
      },
      { name: "isAbstract", type: "boolean", visibility: "public" },
      { name: "properties", type: "PropertyData[]", visibility: "public" },
      { name: "methods", type: "MethodData[]", visibility: "public" },
    ],
    methods: [],
  },
  {
    fqin: "reflectionData/InterfaceData",
    name: "InterfaceData",
    extendsInterface: null,
    properties: [
      { name: "fqin", type: "string", visibility: "public" },
      { name: "name", type: "string", visibility: "public" },
      { name: "properties", type: "PropertyData[]", visibility: "public" },
      { name: "extendsInterface", type: "string|null", visibility: "public" },
      { name: "methods", type: "MethodData[]", visibility: "public" },
    ],
    methods: [],
  },
  {
    fqin: "cli/initializeCli/CommandInterface",
    name: "CommandInterface",
    extendsInterface: null,
    properties: [],
    methods: [
      {
        name: "register",
        returnType: "void|Promise<void>",
        parameters: [{ name: "program", type: "Command" }],
        visibility: "public",
      },
    ],
  },
];
